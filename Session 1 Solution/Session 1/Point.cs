using System;
using System.Collections.Generic;
using System.Diagnostics.Contracts;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Session_1
{
	internal struct Point
	{
		// Attributes
		public int X;
		public int Y;

		// Constructor : is A Special function
		// 1. Named Always with the same name of class or struct
		// 2. Has no return 

		// By default at Struct, Compiler will always generate Parameterless constructor
		// This Parameterless constructor → intialize the attributes of struct with the default value
		//public Point()   // Generated by default
		//{
		//    X = default;  // 0
		//    Y = default;  // 0
		//}

		// in C# 10 you can change default values in struct
		// in C# 10 you can active Parameterless constructor in struct
		public Point()
		{
			X = 1;
			Y = 1;
		}


		// constructor creation
		// Always constructor Access Modifiers is Public uless one case(U will Know in design pattern)
		public Point(int _X, int _Y)
		{
			Y = _Y;
			X = _X;
		}

		// ctor  → create auto constructor
		public Point(int Number)
		{
			X = Y = Number;
		}

		// I will change in The main methodes for ToString 
		//public override string ToString()
		//{
		//    return base.ToString();  // Namespace.DataTypeName
		//}


		public override string ToString()
		{
			return $"({X} , {Y})";
		}
	}
}
