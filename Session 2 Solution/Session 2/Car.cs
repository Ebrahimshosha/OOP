using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;

namespace Session_2
{
    class Car
    {

        #region Attributes

        private int id;
        private string model;
        private double speed;

        #endregion

        #region Property

        /// Note
        /// If you write properties as that ,It is better to create it as Automatic property
        /// and compiler will generate Attributes as Backing Field

        public int Id
        {
            get { return id; }
            set { id = value; }
        }

        public string Model
        {
            get { return model; }
            set { model = value; }
        }

        public double Speed
        {
            get { return speed; }
            set { speed = value; }
        }

        #endregion

        public override string ToString()
        {
            return $"CarId : {id} \nModel : {model} \nSpeed : {speed}";
        }

        /// In Class If No User-Defienfd Constructor Exists
        /// If No User-Defienfd Constructor Exists, Compiler will Always Generate Empty Parameterless Constructor
        ///public Car()  // Generated By default if No User-Defienfd Constructor Exists
        ///{
        ///}  // Do Nothing

        /// In Class If User-Defienfd Constructor Exists
        /// If U Defined Constructor, 
        /// Compiler will No Longer Generate Empty Parameterless Constructor

        #region Constructors and Constructor Chaining

        public Car(int _id, string _model, double _speed)
        {
            Console.WriteLine("Constructor 1");

            id = _id;
            model = _model;
            speed = _speed;
        }

        public Car(int _id, string _model) : this(_id, _model, 100)  // Constructor Chaining
        {
            Console.WriteLine("Constructor 2");
        }

        public Car(int _id) : this(_id, "Lancer") // Constructor Chaining
        {
            Console.WriteLine("Constructor 3");
        } 

        #endregion


    }
}
